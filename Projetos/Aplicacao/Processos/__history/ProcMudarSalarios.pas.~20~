unit ProcMudarSalarios;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs,Conexao, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.DBCtrls,
  Vcl.Mask;

type
  TFrmMudarSalarios = class(TForm)
    LblFuncionarios: TLabel;
    LblCargos: TLabel;
    LblPercentual: TLabel;
    LcbCargos: TDBLookupComboBox;
    LcbFuncionarios: TDBLookupComboBox;
    BtnConfirmar: TButton;
    BtnCancelar: TButton;
    EdtPercentual: TEdit;
    DtsFuncionarios: TDataSource;
    DtsCargos: TDataSource;
    QryFuncionarios: TFDQuery;
    QryFuncionariosCODIGO: TIntegerField;
    QryFuncionariosNOME: TStringField;
    QryCargos: TFDQuery;
    QryCargosCODIGO: TIntegerField;
    QryCargosNOME: TStringField;
    QryFuncionariosSelecionados: TFDQuery;
    QryAux: TFDQuery;
    procedure ClearFormFields;
    procedure LcbCargosClick(Sender: TObject);
    procedure LcbFuncionariosClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure BtnCancelarClick(Sender: TObject);
    procedure BtnConfirmarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FrmMudarSalarios: TFrmMudarSalarios;

implementation

{$R *.dfm}
procedure TFrmMudarSalarios.ClearFormFields;
begin
  LcbCargos.KeyValue := Null;
  LcbFuncionarios.KeyValue := Null;
  EdtPercentual.Clear;
  QryFuncionariosSelecionados.Close;
end;

procedure TFrmMudarSalarios.BtnConfirmarClick(Sender: TObject);
var
  Data: TDateTime;
begin
  if (LcbCargos.KeyValue = Null) and (LcbFuncionarios.KeyValue = Null) then
  begin
    ShowMessage('O cargo ou funcionario é obrigatório.');
    LcbCargos.SetFocus;
    Exit;
  end;

  if StrToFloatDef(EdtPercentual.Text,0) <= 0 then
  begin
    ShowMessage('O percentual é obrigatório.');
    EdtPercentual.SetFocus;
    Exit;
  end;

  QryAux.SQL.Text :=
    'DELETE FROM FUNCIONARIOS_SALARIOS ' +
    'WHERE COD_FUNCIONARIO in ( ' +
    '   SELECT fs.COD_FUNCIONARIO FROM FUNCIONARIOS_SALARIOS fs ' +
    '   INNER JOIN FUNCIONARIOS f ON f.CODIGO = fs.COD_FUNCIONARIO ' +
    '   WHERE f.ATIVO = 1 ' +
    '   GROUP BY fs.COD_FUNCIONARIO HAVING COUNT(fs.COD_FUNCIONARIO) > 1 ' +
    ') AND DATA_HORA = :DATA_HORA';
  QryAux.ParamByName('DATA_HORA').AsDateTime := Data;
  QryAux.ExecSQL;

  QryFuncionariosSelecionados.Close;
  QryFuncionariosSelecionados.SQL.Text :=
    'SELECT fs.COD_FUNCIONARIO , fs.SALARIO FROM FUNCIONARIOS_SALARIOS fs ' +
    'INNER JOIN FUNCIONARIOS f ON f.CODIGO = fs.COD_FUNCIONARIO ' +
    'WHERE f.ATIVO = 1 ' +
    'AND DATA_HORA = (SELECT MAX(fs2.DATA_HORA) FROM FUNCIONARIOS_SALARIOS fs2 WHERE fs2.COD_FUNCIONARIO = f.CODIGO)';

  if LcbCargos.KeyValue <> Null then
    QryFuncionariosSelecionados.SQL.Text := QryFuncionariosSelecionados.SQL.Text
      + 'AND f.CARGO = ' + VarToStr(lcbCargos.KeyValue)
  else
    QryFuncionariosSelecionados.SQL.Text := QryFuncionariosSelecionados.SQL.Text
      + 'AND f.CODIGO = ' + VarToStr(LcbFuncionarios.KeyValue);
  QryFuncionariosSelecionados.Open;

  while not QryFuncionariosSelecionados.Eof do
  begin
    QryAux.SQL.Text := 'INSERT INTO FUNCIONARIOS_SALARIOS(DATA_HORA, COD_FUNCIONARIO, SALARIO) '+
                       'VALUES (:DATA_HORA, :COD_FUNCIONARIO, :SALARIO)';
    QryAux.ParamByName('DATA_HORA').AsDateTime := Data;
    QryAux.ParamByName('COD_FUNCIONARIO').AsInteger := QryFuncionariosSelecionados.FieldByName('CODIGO').AsInteger;
    QryAux.ParamByName('SALARIO').AsCurrency := QryFuncionariosSelecionados.FieldByName('SALARIO').AsCurrency * (1 + (StrToCurr(EdtPercentual.Text) / 100));
    QryAux.ExecSQL;

    QryFuncionariosSelecionados.Next;
  end;

  ClearFormFields;
  if not QryFuncionariosSelecionados.IsEmpty then
    ShowMessage('Evento processado');


end;

procedure TFrmMudarSalarios.BtnCancelarClick(Sender: TObject);
begin
  ClearFormFields;
end;

procedure TFrmMudarSalarios.FormCreate(Sender: TObject);
begin
  QryCargos.Open;
  QryFuncionarios.Open;
end;

procedure TFrmMudarSalarios.FormDestroy(Sender: TObject);
begin
  QryCargos.Close;
  QryFuncionarios.Close;
end;

procedure TFrmMudarSalarios.LcbCargosClick(Sender: TObject);
begin
  LcbFuncionarios.KeyValue := Null;
end;

procedure TFrmMudarSalarios.LcbFuncionariosClick(Sender: TObject);
begin
  LcbCargos.KeyValue := Null;
end;

end.
